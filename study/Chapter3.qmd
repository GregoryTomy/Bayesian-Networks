---
title: "3 Hybrid Bayesian Networks"
format: html
editor: visual
---

## Libraries

```{r}
library(rjags)
```

## Reinforcing Steel Rods

### Mixing Discrete and Continuous Variables

Computing the probability that a steel rod with a diameter of 6.2mm has been produced by supplier s1.

```{r}
sp <- c(0.5, 0.5) # probabilities of the two supplier categories
mu <- c(6.1, 6.25)
sigma <- 0.05

jags_data <- list(sp = sp, mu = mu, sigma = sigma, cdiam = 6.20)

# model is specified in the text file 
model1 <- jags.model(file = "inclu.sc.jam", data = jags_data)
```

Generate random samples from the model. Thinning interval (thin) specifies the fraction of simulations that will be returned - set to 1 out of each successive 20 simulations to minimize the correlation between successive observations.

```{r}
update(model1, n.iter = 10000) # performs the burn-in

# generate random samples from the stationary distribution
simu1 <- coda.samples(model = model1, variable.names = "csup",
                      n.iter = 20000, thin = 20)

sim1 <- simu1[[1]]
```

The function coda.samples returns the observations generated in parallel by one or more chains, each stored as an element of a list. In the example above we used a single chain and we saved it in the variable sim1. We can use it to estimate the probability that a steel rod of diameter 6.2mm has been produced by supplier s1 with the frequency of s1 in the chain.

```{r}
sum(sim1 == 1) / length(sim1)
sum(sim1 == 2) / length(sim1)
```

### Discretising Continous Variables

We define three categories of diameter with boundaries 6.16 and 6.19: thin (less than 6.16), average (between 6.16 and 6.19) and thick (greater than 6.19). We then compute the conditional probability table of D given S and well as the probability table of S given D.

```{r}
limits <- c(6.16, 6.19)
dsd <- matrix(
  c(diff(c(0, pnorm(limits, mu[1], sigma), 1)),
    diff(c(0, pnorm(limits, mu[2], sigma), 1))
  ),
  3, 2
)
dimnames(dsd) <- list(D = c("thin", "average", "thick"),
                      S = c("s1", "s2"))

dsd
```

We compute the joint distribution of D and S by multipying dsd by the probability of each S

```{r}
jointd <- dsd * sp
jointd
```

Compute the conditional probability of S given D.

```{r}
dds <- t(jointd / rowSums(jointd))
dds
```

## Pest Example with JAGS
The most important difference from the previous BNs is that the probability distributions used in the following are more sophisticated than multinomial and multivariate normal.
```{r}
dat0 <- list(
  p_PR = c(0.7, 0.2, 0.1),
  a_CL = 3,
  b_CL = 1,
  g_G1 = c(1, 3, 10),
  k_G2 = 10,
  m_TR = 5, s_TR = 2.5,
  r_LO = 1/3, d_LO = 1
)
```














