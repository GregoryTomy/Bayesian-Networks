# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
renderGraph(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
addEdge(gr, "Plcg", "PKC", lty = "dashed", col = "blue")
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
addEdge(gr, "Plcg", "PKC")
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
edgeRenderInfo(gr)
# renderGraph(gr)
?addEdge
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
addEdge("Plcg", "PKC", gr)
# renderGraph(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
addEdge("Plcg", "PKC", gr)
renderGraph(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
gr <- addEdge("Plcg", "PKC", gr)
renderGraph(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
gr <- addEdge("Plcg", "PKC", gr)
#
# renderGraph(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
gr <- addEdge("Plcg", "PKC", gr)
renderGraph(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
# missed arcs
gr <- addEdge("Plcg", "PKC", gr)
graphviz.plot(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
graphviz.plot(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
renderGraph(gr)
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
pdf("paper/images/final_net.pdf")
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("PKC~Mek", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
renderGraph(gr)
dev.off()
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
pdf("paper/images/final_net.pdf")
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("Mek~Akt", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
renderGraph(gr)
dev.off()
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density", title = "Histograms of 11 Variables") +
facet_wrap(~molecules, nrow = 6, ncol = 2, scales = "free")
library(tidyverse)
library(bnlearn)
library(lattice)
data <- read_csv("data/sachs1.csv")
head(data)
glimpse(data)
sum(is.na(data))
nrow(data)
df_long <- data %>% gather(key = "molecules", value = "concentration")
ggplot(df_long, aes(molecules, concentration)) +
geom_boxplot()
df_test <- df_long %>%
filter(concentration < 1000)
ggplot(df_test, aes(molecules, concentration)) +
geom_boxplot()
summary(data)
histogram(~ PIP2 + PIP3 + pmek + P38, data = data, type = "density",
breaks = NULL, xlab = "expression levels", ylab = "density",
scales = list(x = list(relation = "free"),
y = list(relation = "free", at = NULL)),
panel = function(x, ...) {
panel.abline(h = 0)
panel.histogram(x, ...)
panel.mathdensity(dmath = dnorm, col = "black",
args = list(mean = mean(x), sd = sd(x)))
}
)
ggplot(data, aes(pmek)) +
geom_histogram(aes(y = ..density..), bins = 50, color = "white") +
geom_density()
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density", title = "Histograms of 11 Variables") +
facet_wrap(~molecules, nrow = 6, ncol = 2, scales = "free")
corplot(data)
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density", title = "Histograms of 11 Variables") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
ggsave("paper/images/molecule_skews.pdf",
device = pdf,
width = 5,
height = 3
)
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
ggsave("paper/images/molecule_skews.pdf",
device = pdf
)
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 11, ncol = 1, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 11, ncol = 1, scales = "free")
ggsave("paper/images/molecule_skews.pdf",
device = pdf
)
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, scales = "free")
ggsave("paper/images/molecule_skews.pdf",
device = pdf
)
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
ggsave("paper/images/molecule_skews.pdf",
device = pdf
)
cor(data)
library(tidyverse)
library(bnlearn)
library(lattice)
library(corrplot)
install.packages("corrplot")
library(tidyverse)
library(bnlearn)
library(lattice)
library(corrplot)
cor_matrix <- cor(data)
# Customize the correlation plot
corrplot(cor_matrix, method = "color", type = "upper", tl.col = "black", tl.srt = 45)
cor_matrix <- cor(data)
# Customize the correlation plot
corrplot(cor_matrix, method = "color", type = "upper", tl.col = "black", tl.srt = 45)
col_names <- c('Raf', 'Mek', 'Plcg', 'PIP2', 'PIP3', "Erk", "Akt",
"PKA", "PKC", "P38", "Jnk")
names(data)
col_names <- c('Raf', 'Mek', 'Plcg', 'PIP2', 'PIP3', "Erk", "Akt",
"PKA", "PKC", "P38", "Jnk")
names(data) <- col_names
cor_matrix <- cor(data)
# Customize the correlation plot
corrplot(cor_matrix, method = "color", type = "upper", tl.col = "black", tl.srt = 45)
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
data <- read_csv("data/sachs1.csv")
col_names <- c('Raf', 'Mek', 'Plcg', 'PIP2', 'PIP3', "Erk", "Akt",
"PKA", "PKC", "P38", "Jnk")
names(data) <- col_names
head(data)
glimpse(data)
sum(is.na(data))
nrow(data)
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666") +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2, fill = "#FF6666", alpha = 0.2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2, fill = "", alpha = 0.2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2, alpha = 0.2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue",
fill = "black") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "black",
fill = "black") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, , ncol = 3, ales = "free")
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4, , ncol = 3, ales = "free")
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4,  ncol = 3, ales = "free")
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4,  ncol = 3, ales = "free")
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4,  ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "white") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4,  ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4,  ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
df_long <- data %>% gather(key = "molecules", value = "concentration")
ggplot(df_long, aes(molecules, concentration)) +
geom_boxplot()
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4,  ncol = 3, scales = "free")
# ggsave("paper/images/molecule_skews.pdf",
#   device = pdf
# )
# create a histogram for each column and arrange them in a grid
ggplot(df_long, aes(x = concentration)) +
geom_histogram(aes(y = ..density..), binwidth = 0.8, color = "lightblue") +
geom_density(alpha = .2) +
labs(x = "Value", y = "Density") +
facet_wrap(~molecules, nrow = 4,  ncol = 3, scales = "free")
ggsave("paper/images/molecule_skews.pdf",
device = pdf
)
cor_matrix <- cor(data)
# Customize the correlation plot
corrplot(cor_matrix, method = "color", type = "upper", tl.col = "black", tl.srt = 45)
ggsave("paper/images/molecule_corr.pdf",
device = pdf
)
cor_matrix <- cor(data)
# Customize the correlation plot
pdf("paper/images/molecule_corr.pdf")
corrplot(cor_matrix, method = "color", type = "upper", tl.col = "black", tl.srt = 45)
dev.off()
