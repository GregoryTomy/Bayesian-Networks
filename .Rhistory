# dag_wh2 %>%
#   filter(strength > 0.85 & direction >= 0.5) %>%
#   arrange(desc(strength))
tiers <- list("INT", names(fsachs)[1:11])
bl <- tiers2blacklist(tiers)
dag_bl <- tabu(
fsachs,
blacklist = bl,
score = "bde",
iss = 1,
tabu = 50
)
graphviz.plot(dag_bl)
dag_bl_hc <- hc(
fsachs,
blacklist = bl,
score = "bde",
iss = 1
)
graphviz.plot(dag_bl_hc)
INT <- map(1:11, ~which(fsachs$INT == .x))
nodes <- names(fsachs)[1:11]
names(INT) <- nodes
start <- random.graph(
nodes = nodes,
method = "melancon",
num = 800,
burn.in = 10^5,
every = 100
)
netlist <- map(start, ~tabu(
fsachs[, 1:11],
score = "mbde",
exp = INT,
iss = 1,
start = .x,
tabu = 50
)
)
intscore <- custom.strength(
netlist,
nodes = nodes,
cpdag = FALSE
)
intscore %>%
filter(strength > 0.9) %>%
arrange(desc(strength))
final_net <- averaged.network(intscore, threshold = 0.65)
unlist(compare(target, final_net))
mod_string <- modelstring(final_net)
graph_net <- model2network(mod_string)
# # set missed arcs
# graph_net <- set.arc(graph_net, "Plcg", "PKC")
# graph_net <- set.arc(graph_net, "PIP2", "PKC")
# graph_net <- set.arc(graph_net, "PIP3", "Akt")
#
pdf("paper/images/final_net.pdf")
gr <- graphviz.plot(graph_net, render = FALSE)
fp_list <- c("Mek~Akt", "PKC~PIP3","Jnk~P38","Mek~Jnk","Raf~Akt")
edgeRenderInfo(gr)$col[fp_list] = "red"
edgeRenderInfo(gr)$lty[fp_list] = "dashed"
edgeRenderInfo(gr)$col["Plcg~PIP3"] = "purple"
edgeRenderInfo(gr)$lty["Plcg~PIP3"] = "dashed"
renderGraph(gr)
dev.off()
graphviz.plot(final_net)
graphviz.plot(target)
fsachs2 <- fsachs[, 1:11] # we don't need INT
bn <- bn.fit(final_net, fsachs2, method = "bayes")
junc <- compile(as.grain(bn))
# set evidence
erk_low <- setEvidence(junc, nodes = "Erk", states = "3")
a <- querygrain(junc, nodes = "Akt")$Akt
b <- querygrain(erk_low, nodes = "Akt")$Akt
# interventions on Erk would block all inlfuences from its parents
erk_parents <- bnlearn::parents(bn, "Erk")
# remove arcs from Erk parent
inter_sachs <- drop.arc(final_net, "Mek", "Erk")
inter_sachs <- drop.arc(inter_sachs, "PKA", "Erk")
bn1 <- bn.fit(inter_sachs, fsachs2, method = "bayes")
junc1 <- compile(as.grain(bn1))
erk_low1 <- setEvidence(junc1, nodes = "Erk", states = "2")
x <- querygrain(junc1, nodes = "PKA")$PKA
y <- querygrain(erk_low1, nodes = "PKA")$PKA
c <- data.frame(
Before = a,
After = b,
C = factor(
c("Low", "Medium", "High"),
levels = c("Low", "Medium", "High")
)
)
z <- data.frame(
Before = x,
After = y,
Z = factor(
c("Low", "Medium", "High"),
levels =  c("Low", "Medium", "High")))
c <- c %>% pivot_longer(
cols = c(Before, After), names_to = "State", values_to = "Probability"
)
c$State <- factor(c$State, levels = c("Before", "After"))
c
# ggplot(c, aes(x = C, y = "Probability", fill = "State")) +
#   geom_col()
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#66B2FF", "After" = "#c1cdcd")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
ggsave("paper/images/erk_akt.pdf",
device = pdf,
width = 5,
height = 3
)
z <- z %>% pivot_longer(
cols = c(Before, After), names_to = "State", values_to = "Probability"
)
z$State <- factor(z$State, levels = c("Before", "After"))
z
erk_pka <- ggplot(z, aes(x = Z, y = Probability, fill = State)) +
geom_col(position = "dodge", color="black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
ggsave("paper/images/erk_pka.pdf",
device = pdf,
width = 5,
height = 3
)
erk_pka +
theme(legend.position = c(0.87, 0.77))
ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.77)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#66B2FF", "After" = "#c1cdcd")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#66B2FF", "After" = "#c1cdcd")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
c
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
c
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#66B2FF", "After" = "#c1cdcd")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
c
c$State
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
c
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("After" = "#66B2FF", "Before" = "#c1cdcd")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
c
c <- c %>% pivot_longer(
cols = c(Before, After), names_to = "State", values_to = "Probability"
)
c <- c %>% pivot_longer(
cols = c(Before, After), names_to = "State", values_to = "Probability"
)
c <- data.frame(
Before = a,
After = b,
C = factor(
c("Low", "Medium", "High"),
levels = c("Low", "Medium", "High")
)
)
z <- data.frame(
Before = x,
After = y,
Z = factor(
c("Low", "Medium", "High"),
levels =  c("Low", "Medium", "High")))
c <- c %>% pivot_longer(
cols = c(Before, After), names_to = "State", values_to = "Probability"
)
c$State <- factor(c$State, levels = c("After", "Before"))
c
# ggplot(c, aes(x = C, y = "Probability", fill = "State")) +
#   geom_col()
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("After" = "#66B2FF", "Before" = "#c1cdcd")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
c
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
c
z <- z %>% pivot_longer(
cols = c(Before, After), names_to = "State", values_to = "Probability"
)
z$State <- factor(z$State, levels = c( "After", "Before"))
z
erk_pka <- ggplot(z, aes(x = Z, y = Probability, fill = State)) +
geom_col(position = "dodge", color="black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
# ggsave("paper/images/erk_pka.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
erk_pka <- ggplot(z, aes(x = Z, y = Probability, fill = State)) +
geom_col(position = "dodge", color="black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_pka
# ggsave("paper/images/erk_pka.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
erk_pka <- ggplot(z, aes(x = Z, y = Probability, fill = State)) +
geom_col(position = "dodge", color="black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF"),
breaks = c("Before", "After"))) +
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF"),
breaks = c("Before", "After"))) +
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF"),
breaks = c("Before", "After")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
#
# ggsave("paper/images/erk_akt.pdf",
#   device = pdf,
#   width = 5,
#   height = 3
# )
c
erk_akt <- ggplot(c, aes(x = C, y = Probability, fill = State)) +
geom_col(position = "dodge", color = "black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF"),
breaks = c("Before", "After")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_akt
ggsave("paper/images/erk_akt.pdf",
device = pdf,
width = 5,
height = 3
)
erk_pka <- ggplot(z, aes(x = Z, y = Probability, fill = State)) +
geom_col(position = "dodge", color="black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF"),
breaks = c("Before", "After"))) +
erk_pka <- ggplot(z, aes(x = Z, y = Probability, fill = State)) +
geom_col(position = "dodge", color="black", width = 0.6)  +
scale_fill_manual(values = c("Before" = "#c1cdcd", "After" = "#66B2FF"),
breaks = c("Before", "After")) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.87, 0.87)) +
guides(fill = guide_legend(title = NULL)) +
coord_flip()
erk_pka
ggsave("paper/images/erk_pka.pdf",
device = pdf,
width = 5,
height = 3
)
fu_prob <- array(c(0.98, 0.02), dim = 2, dimnames = list(Fu = levels_Fu))
fu_prob <- array(c(0.98, 0.02), dim = 2, dimnames = list(Fu = levels_Fu))
fu_prob <- array(c(0.98, 0.02), dim = 2, dimnames = list(Fu = levels_Fu))
toy_dag <- model2network("[Fuel?][Clean Spark Plugs][Fuel Meter Reading|Fuel?][Start?|Fuel?:Clean Spark Plugs]")
levels_Fu <- c("Yes", "No")
levels_SP <- c("Yes", "No")
levels_FM <- c("Full", "Half", "Empty")
levels_S <- c("Yes", "No")
graphviz.plot(toy_dag, layout = "dot")
fu_prob <- array(c(0.98, 0.02), dim = 2, dimnames = list(Fu = levels_Fu))
sp_prob <- array(c(0.96, 0.04), dim = 2, dimnames = list(Fu = levels_SP))
fm_prob <- array(c(0.39, 0.60, 0.01, 0.001, 0.001, 0.998), dim = c(3, 2),
dimnames = list(FM = levels_FM, Fu = levels_Fu))
st_prob <- array(
c(0.99, 0.01, 0.01, 0.99, 0, 1, 0, 1),
dim = c(2, 2, 2),
dimnames = list(S = levels_S, SP = levels_SP, Fu = levels_Fu)
)
#
# knitr::kable(fu_prob, caption = "$P(Fu)$", format = "latex")
# knitr::kable(sp_prob, caption = "$P(SP)$", format = "latex")
knitr::kable(fm_prob, caption = "$P(FM|Fu)$: probability of fuel meter reading (FM) given fuel (Fu)",
col.names = c("Fu= yes", "Fu= no"),
format = "latex")
knitr::kable(st_prob[, , 1], caption = "$P(S|SP, Fu = Yes)$: probability of start (S) given if clean spark plug is dirty (SP) when there is fuel.",
col.names = c("SP = yes", "SP = no"),
row.names = c("S = yes", "S = no"),
format = "latex")
fu_prob <- array(c(0.98, 0.02), dim = 2, dimnames = list(Fu = levels_Fu))
sp_prob <- array(c(0.96, 0.04), dim = 2, dimnames = list(Fu = levels_SP))
fm_prob <- array(c(0.39, 0.60, 0.01, 0.001, 0.001, 0.998), dim = c(3, 2),
dimnames = list(FM = levels_FM, Fu = levels_Fu))
st_prob <- array(
c(0.99, 0.01, 0.01, 0.99, 0, 1, 0, 1),
dim = c(2, 2, 2),
dimnames = list(S = levels_S, SP = levels_SP, Fu = levels_Fu)
)
#
# knitr::kable(fu_prob, caption = "$P(Fu)$", format = "latex")
# knitr::kable(sp_prob, caption = "$P(SP)$", format = "latex")
knitr::kable(fm_prob, caption = "$P(FM|Fu)$: probability of fuel meter reading (FM) given fuel (Fu)",
col.names = c("Fu= yes", "Fu= no"),
format = "latex")
knitr::kable(st_prob[, , 1], caption = "$P(S|SP, Fu = Yes)$: probability of start (S) given if clean spark plug is dirty (SP) when there is fuel.",
col.names = c("SP = yes", "SP = no"),
row.names = TRUE,
format = "latex")
# knitr::kable(st_prob[, , 2], caption = "$P(S|SP, Fu = No)$: probability of start (S) given if clean spark plug is dirty (SP) when there is no fuel.",
#              col.names = c("SP = yes", "SP = no"),
#              row.names = c("S = yes", "S = no"),
#              format = "latex")
avg_rand <- averaged.network(rand, threshold = 0.90)
pdf("paper/images/m2.pdf")
graphviz.plot(avg_rand)
dev.off()
